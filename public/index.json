[{"content":"Phishpaste is a tool used to copy landing pages, sending profiles, and email templates between users in gophish\nset $DATABASE_URL export DATABASE_URL='\u0026lt;\u0026lt;gophishdbuser\u0026gt;\u0026gt;:\u0026lt;\u0026lt;gophishdbpwd\u0026gt;\u0026gt;@(\u0026lt;\u0026lt;IPADDRESS\u0026gt;\u0026gt;:3306)/gophish?charset=utf8\u0026amp;parseTime=True\u0026amp;loc=UTC' change to the gophish directory cd /root/gophish/ List gophish users go run phishpaste.go --list-users Copy data go run phishpaste.go --source \u0026lt;\u0026lt;sourceuser\u0026gt;\u0026gt; --destination \u0026lt;\u0026lt;destinationuser\u0026gt;\u0026gt; --email-templates --landing-pages --sending-profiles ","permalink":"https://examplesite.com/posts/phishpaste/","summary":"\u003cp\u003ePhishpaste is a tool used to copy landing pages, sending profiles, and email templates between users in gophish\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eset $DATABASE_URL \u003ccode\u003eexport DATABASE_URL='\u0026lt;\u0026lt;gophishdbuser\u0026gt;\u0026gt;:\u0026lt;\u0026lt;gophishdbpwd\u0026gt;\u0026gt;@(\u0026lt;\u0026lt;IPADDRESS\u0026gt;\u0026gt;:3306)/gophish?charset=utf8\u0026amp;parseTime=True\u0026amp;loc=UTC'\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echange to the gophish directory \u003ccode\u003ecd /root/gophish/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eList gophish users \u003ccode\u003ego run phishpaste.go --list-users\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCopy data \u003ccode\u003ego run phishpaste.go --source \u0026lt;\u0026lt;sourceuser\u0026gt;\u0026gt; --destination \u0026lt;\u0026lt;destinationuser\u0026gt;\u0026gt; --email-templates --landing-pages --sending-profiles\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg alt=\"Image Description\" loading=\"lazy\" src=\"/images/PhishPaste-20241210134632470.webp\"\u003e\u003c/p\u003e","title":"PhishPaste"},{"content":" login as root on the nginx server create a new openssl certificate sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key -out /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.cer copy the existing server block to the bottom of the nginx config file at sudo vi /etc/nginx/conf.d/revers-proxy.conf update the new block with the new domain name (see below) save and quit test nginx nginx -t Issue the certificate with the command below ./acme.sh --issue -d \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; --server letsencrypt --nginx install certificate with the command below: .acme.sh/acme.sh --install-cert -d \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; \\\r\u0026gt; --key-file /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key \\\r\u0026gt; --fullchain-file /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.cer \\\r\u0026gt; --reloadcmd \u0026#34;service nginx restart\u0026#34; server block server {\rlisten 80;\rserver_name \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; www.\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;; ## server name can be replaced by nginx server IP address (ex. 192.168.1.132)\rlocation / {\rproxy_pass http://23.138.40.37:80; ## backend-server can be replaced with IP address of web sever to be proxied (ex. http192.168.1.37:80)\rproxy_set_header Host $host;\rproxy_set_header X-Real-IP $remote_addr;\rproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r}\rlisten 443 ssl;\rssl_certificate_key /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key;\rssl_certificate /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.crt;\r} ","permalink":"https://examplesite.com/posts/create-new-ssl-cert-on-gophish+nginx/","summary":"\u003col\u003e\n\u003cli\u003elogin as root on the nginx server\u003c/li\u003e\n\u003cli\u003ecreate a new openssl certificate\n\u003ccode\u003esudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key -out /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.cer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ecopy the existing server block to the bottom of the nginx config file at \u003ccode\u003esudo vi /etc/nginx/conf.d/revers-proxy.conf\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eupdate the new block with the new domain name (see below)\u003c/li\u003e\n\u003cli\u003esave and quit\u003c/li\u003e\n\u003cli\u003etest nginx \u003ccode\u003enginx -t\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIssue the certificate with the command below\n\u003ccode\u003e./acme.sh --issue -d \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; --server letsencrypt --nginx\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003einstall certificate with the command below:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e.acme.sh/acme.sh --install-cert -d \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; \\\r\n\u0026gt; --key-file /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key \\\r\n\u0026gt; --fullchain-file /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.cer \\\r\n\u0026gt; --reloadcmd \u0026#34;service nginx restart\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"server-block\"\u003eserver block\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eserver {\r\n        listen 80;\r\n        server_name \u0026lt;\u0026lt;domain\u0026gt;\u0026gt; www.\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;; ## server name can be replaced by nginx server IP address (ex. 192.168.1.132)\r\n\r\n        location / {\r\n                proxy_pass http://23.138.40.37:80; ## backend-server can be replaced with IP address of web sever to be proxied (ex. http192.168.1.37:80)\r\n                proxy_set_header Host $host;\r\n                proxy_set_header X-Real-IP $remote_addr;\r\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        }\r\n        listen 443 ssl;\r\n        ssl_certificate_key /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.key;\r\n        ssl_certificate /etc/nginx/ssl/\u0026lt;\u0026lt;domain\u0026gt;\u0026gt;.crt;\r\n}\n\u003c/code\u003e\u003c/pre\u003e","title":"Create new SSL cert on gophish+nginx"}]